x-dockerfile-inline: &dockerfile_inline
    dockerfile_inline: |
      FROM python:3.11-slim-bookworm
      ENV PIP_ROOT_USER_ACTION=ignore
      ENV PYTHONDONTWRITEBYTECODE=1
      ENV PYTHONUNBUFFERED=1
      ENV TZ=UTC

      COPY fastid /opt/build/fastid
      COPY *.md /opt/build/
      COPY pyproject.toml /opt/build/
      COPY poetry.lock /opt/build/
      COPY alembic.ini /opt/build/
      COPY migrations /opt/build/migrations
      COPY tests /opt/build/tests

      WORKDIR /opt/build/

      RUN apt-get update && apt-get install -y iputils-ping telnet curl
      RUN pip install poetry
      RUN poetry config virtualenvs.create false --local
      RUN poetry install --with dev

      USER www-data

      EXPOSE 8000/tcp

      HEALTHCHECK --interval=30s --timeout=10s --retries=3 CMD curl -f http://localhost:8000/healthcheck/ || exit 1

services:

  fastid-traefik:
    restart: unless-stopped
    image: traefik:2.10
    container_name: fastid-traefik
    env_file:
      - .env
    command: |
      --api.insecure=true
      --api.dashboard=true
      --log.level=INFO
      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --entrypoints.smtp.address=:1025
      --entrypoints.rabbitmq.address=:5672
      --entrypoints.redis.address=:6379
      --entrypoints.postgres.address=:5432
      --providers.docker
      --providers.docker.endpoint=unix:///var/run/docker.sock
      --providers.docker.exposedByDefault=false
      --providers.docker.network=fastid
      --providers.file.filename=/etc/traefik/traefik.tls.yml
      --metrics.prometheus=true
    ports:
      - 80:80
      - 443:443
      - 1025:1025
      - ${RABBITMQ_PORT:-5672}:5672
      - ${REDIS_PORT:-6379}:6379
      - ${DB_PORT:-5432}:5432
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.tls.yml:/etc/traefik/traefik.tls.yml:ro
      - ./certs/:/certs/:ro
    networks:
      - fastid
    labels:
      - "traefik.enable=True"

      # HTTP
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.scheme=http"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost.direct`)"

  fastid:
    build:
      context: .
      <<: *dockerfile_inline
    container_name: fastid
    command: "uvicorn --reload --no-date-header --no-server-header --no-access-log --log-level=error --host=0.0.0.0 fastid.app:app"
    env_file:
      - .env
    environment:
      - DB_HOST=fastid-postgres
    networks:
      - fastid
    volumes:
      - ./fastid:/opt/build/fastid/
      - ./migrations:/opt/build/migrations/
      - ./tests:/opt/build/tests/
    depends_on:
      - fastid-postgres
      - fastid-redis
      - fastid-smtp
      - fastid-rabbitmq
    labels:
      - "traefik.enable=True"

      # HTTP
      - "traefik.http.services.fastid.loadbalancer.server.scheme=http"
      - "traefik.http.services.fastid.loadbalancer.server.port=8000"
      - "traefik.http.routers.fastid.entrypoints=https,http"
      - "traefik.http.routers.fastid.tls=true"
      - "traefik.http.routers.fastid.rule=Host(`localhost.direct`)"

  fastid-postgres:
    image: postgres
    container_name: fastid-postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER:-user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_DATABASE:-database}
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d ${DB_DATABASE:-postgres} -U ${DB_USER:-user}
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fastid
    labels:
      - "traefik.enable=True"

      # TCP
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"

  fastid-redis:
    image: redis:latest
    container_name: fastid-redis
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./.data/redis:/data
    networks:
      - fastid
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=True"

      # TCP
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.services.redis.loadbalancer.server.port=6379"

  fastid-smtp:
    image: cd2team/mailhog:latest
    container_name: fastid-smtp
    restart: unless-stopped
    networks:
      - fastid
    healthcheck:
      test: sh -c 'netstat -an | grep 1025 > /dev/null; if [ 0 != $? ]; then exit 1; fi;'
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=True"

      # HTTP
      - "traefik.http.routers.smtp.tls=true"
      - "traefik.http.services.smtp.loadbalancer.server.scheme=http"
      - "traefik.http.services.smtp.loadbalancer.server.port=8025"
      - "traefik.http.routers.smtp.rule=Host(`smtp.localhost.direct`)"
      - "traefik.http.routers.smtp.entrypoints=https"

      # TCP
      - "traefik.tcp.routers.smtp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.smtp.entrypoints=smtp"
      - "traefik.tcp.services.smtp.loadbalancer.server.port=1025"

  fastid-rabbitmq:
    image: rabbitmq:management
    container_name: fastid-rabbitmq
    restart: unless-stopped
    volumes:
      - ./.data/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fastid
    labels:
      - "traefik.enable=True"

      # HTTP
      - "traefik.http.routers.rabbitmq.tls=true"
      - "traefik.http.services.rabbitmq.loadbalancer.server.scheme=http"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost.direct`)"
      - "traefik.http.routers.rabbitmq.entrypoints=https"

      # TCP
      - "traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq"
      - "traefik.tcp.services.rabbitmq.loadbalancer.server.port=5672"

  fastid-migrations:
    build:
      context: .
      <<: *dockerfile_inline
    container_name: fastid-migrations
    command: alembic upgrade head
    volumes:
      - ./fastid:/opt/build/fastid/
      - ./migrations:/opt/build/migrations/
    env_file:
      - .env
    environment:
      - DB_HOST=fastid-postgres
      - DB_PORT=${DB_USER:-5432}
      - DB_USER=${DB_USER:-user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_DATABASE=${DB_DATABASE:-database}
    networks:
      - fastid
    depends_on:
      fastid-postgres:
        condition: service_healthy

networks:
  fastid:
    name: fastid-network
    driver: bridge
