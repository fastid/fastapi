name: Deployment

on:
  release:
    types:
      - published

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PYTHON_VERSION: 3.12.0

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            fastid/fastid
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            maintainer=Kostya Ten
            org.opencontainers.image.description=FastID
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.source=https://github.com/fastid

      - name: Build docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  deploy:
#    name: "Deploy"
#    runs-on: ubuntu-latest
#    needs: [build]
#    timeout-minutes: 5
#    steps:
#      - name: Deploy remote server
#        uses: ian-whitestone/action-ssh@master
#        with:
#          debug: true
#          hosts: 'deploy@server.iperon.org'
#          port: 2222
#          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
#          command: |
#            cd ./iperon-api &&
#            docker compose pull &&
#            docker compose down &&
#            docker compose up -d
